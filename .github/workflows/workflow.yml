name: CI/CD Pipeline Demo for NextJS to AWS
on:
  push:
    branches: [ main ]

env:
  reponame: CI-CD_DEMO
  codedeployname: Snake
  environment: Staging
  s3bucket: cicd-codeploy-bucket

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:      
      - uses: actions/checkout@v4

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      # - name: Cache nextjs build
      #   id: cache-njs
      #   uses: actions/cache@v4
      #   with:
      #     path: |
      #       ~/.npm
      #       ${{ github.workspace }}/.next/cache
      #     key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**/*.js', '**/*.jsx', '**/*.ts', '**/*.tsx') }}
      #     restore-keys: |
      #       ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-
      - uses: oven-sh/setup-bun@v2
      - name: Install dependencies
        run: bun install --frozen-lockfile

      # - name: Rebuild app if no cache
      #   if: ${{ steps.cache-njs.outputs.cache-hit != 'true' }}
      #   run: bun run build

      - name: build app
        run: bun run build

      - name: Run unit tests
        run: bun test

      - name: Pass build files to next job for deployment
        uses: actions/upload-artifact@v4
        with:
          name: deploy-dist
          path: dist
      
  deploy-staging:
    runs-on: ubuntu-latest
    needs: [build-and-test]
    if: github.ref == 'refs/heads/main'
    steps:    
      - name: Download build files
        uses: actions/download-artifact@v4
  
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-2

      - name: Upload to S3
        working-directory: dist
        run: aws s3 sync ./ s3://${{ env.s3bucket }}/${{ env.codedeployname }}/${{ env.environment }}/ --delete

      - name: CodeDeploy Staging Deployment
        id: deploy
        run: |
          aws deploy create-deployment \
            --application-name Snake \
            --deployment-group-name Staging \
            --deployment-config-name CodeDeployDefault.OneAtATime \
            --github-location repository=${{ github.repository }},commitId=${{ github.sha }}
            
  # deploy-production:
  #   runs-on: ubuntu-latest
  #   needs: [build-and-test]
  #   if: github.ref == 'refs/heads/main'
  #   steps:    
  #     - name: Configure AWS credentials
  #       uses: aws-actions/configure-aws-credentials@v4
  #       with:
  #         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #         aws-region: ap-southeast-2

  #     - name: CodeDeploy Production Deployment
  #       id: deploy
  #       run: |
  #         aws deploy create-deployment \
  #           --application-name Snake \
  #           --deployment-group-name Production \
  #           --deployment-config-name CodeDeployDefault.OneAtATime \
  #           --github-location repository=${{ github.repository }},commitId=${{ github.sha }}